<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="School">
	<!--일단 족보  -->
	<select id="findPastWorkList" parameterType="SchoolVO" resultType="SchoolVO">
		SELECT
			b.brdid,
			b.swid,
			b.title,
			CASE WHEN b.regdate > CURDATE()
				THEN DATE_FORMAT(b.regdate, '%H:%i:%s')
				ELSE DATE_FORMAT(b.regdate, '%Y-%m-%d')
			END as regdate,
			a.nickname as writer,
			b.count,
			b.likes,
			(SELECT COUNT(*) FROM brd_schoolwork_reply c WHERE c.brdid = b.brdid) as repcount
		FROM brd_schoolwork b
		LEFT JOIN info_userinfo a on b.userno = a.userno
		WHERE swid=1
		<if test = "keyword != null and keyword !=''">
			<if test = "srchType ==1">
				AND b.title LIKE CONCAT('%',#{keyword},'%')
			</if>
			<if test = "srchType ==2">
				AND a.nickname LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</if>
		ORDER BY b.brdid DESC
		LIMIT #{skiprow}, #{pagerow}
	</select>
	<insert id="addPastWorkData" parameterType="SchoolVO" useGeneratedKeys="true" keyProperty="brdid" keyColumn="brdid">
		INSERT INTO brd_schoolwork(
			swid,
			title,
			regdate,
			moddate,
			content,
			userno
		) VALUES(
			#{swid},
			#{title},
			NOW(),
			NOW(),
			#{content},
			#{userno}
		)
		<selectKey keyProperty="brdid" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<select id="findPastWorkContent" parameterType="SchoolVO" resultType="SchoolVO">
		SELECT
			b.brdid,
			b.swid,
			b.title,
			DATE_FORMAT(b.regdate, '%Y-%m-%d %H:%i:%s') as regdate,
			b.content,
			a.nickname as writer,
			b.userno,
			b.count,
			b.likes
		FROM brd_schoolwork b
		LEFT JOIN info_userinfo a on b.userno = a.userno
		WHERE b.brdid = #{brdid}
	</select>
	<update id="modPastWorkCount" parameterType="SchoolVO">
		UPDATE brd_schoolwork SET
			count = count + 1
		WHERE brdid = #{brdid}
	</update>
	<select id="findPastWorkTotalCnt" parameterType="SchoolVO" resultType="int">
		SELECT 
			COUNT(*)
		FROM brd_schoolwork
		WHERE swid=1
	</select>
	<insert id="addPastWorkReply" parameterType="SchoolVO" useGeneratedKeys="true" keyProperty="repid" keyColumn="repid">
		INSERT INTO brd_schoolwork_reply(
			brdid,
			content,
			regdate,
			moddate,
			userno
		) VALUES(
			#{brdid},
			#{repContent},
			NOW(),
			NOW(),
			#{userno}
		)
		<selectKey keyProperty="repid" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>	
	<select id="findPastWorkReply" parameterType="SchoolVO"  resultType="SchoolVO">
		SELECT 
			a.repid,
			b.nickname as replier,
			a.content as repContent,
			DATE_FORMAT(a.regdate, '%Y-%m-%d %H:%i:%s') as repRegdate
		FROM brd_schoolwork_reply a
		LEFT JOIN info_userinfo b on a.userno = b.userno
		WHERE a.brdid = #{brdid}
	</select>
	<delete id="deletePastWorkReply" parameterType="SchoolVO">
		DELETE FROM
			brd_schoolwork_reply
		WHERE brdid = #{brdid}
	</delete>
	<delete id="deletePastWork" parameterType="SchoolVO">
		DELETE FROM
			brd_schoolwork
		WHERE brdid=#{brdid}
	</delete>
	<update id="modPastWorkData" parameterType="SchoolVO">
		UPDATE brd_schoolwork SET
			content = #{content},
			title = #{title},
			moddate = NOW()
		WHERE brdid=#{brdid}
	</update>
	
	
	
	
	
	
	
	
	
	
	<!-- 학업게시판 -->
	<select id="findEducationList" parameterType="SchoolVO" resultType="SchoolVO">
		SELECT
			b.brdid,
			b.swid,
			d.name as typename,
			b.title,
			CASE WHEN b.regdate > CURDATE()
				THEN DATE_FORMAT(b.regdate, '%H:%i:%s')
				ELSE DATE_FORMAT(b.regdate, '%Y-%m-%d')
			END as regdate,
			a.nickname as writer,
			b.count,
			(SELECT COUNT(*) FROM brd_schoolwork_likes f WHERE b.brdid = f.brdid and f.likes = 1) as likes,
			(SELECT COUNT(*) FROM brd_schoolwork_reply c WHERE c.brdid = b.brdid) as repcount
		FROM brd_schoolwork b
		LEFT JOIN info_userinfo a on b.userno = a.userno
		LEFT JOIN cod_schoolwork d on b.swid = d.swid
		WHERE 1=1
		<if test="ptypeid != null and ptypeid != ''">
			AND d.ptypeid = #{ptypeid}
		</if>
		<if test = "keyword != null and keyword !=''">
			<if test = "srchType ==1">
				AND b.title LIKE CONCAT('%',#{keyword},'%')
			</if>
			<if test = "srchType ==2">
				AND a.nickname LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</if>
		<if test="swid != null and swid != 0">
			<if test="srchType == 3">
				AND b.swid = #{swid}
			</if>
		</if>
		ORDER BY b.brdid DESC
		LIMIT #{skiprow}, #{pagerow}
	</select>
	<insert id="addEducationData" parameterType="SchoolVO" useGeneratedKeys="true" keyProperty="brdid" keyColumn="brdid">
		INSERT INTO brd_schoolwork(
			swid,
			title,
			regdate,
			moddate,
			content,
			userno
		) VALUES(
			#{swid},
			#{title},
			NOW(),
			NOW(),
			#{content},
			#{userno}
		)
		<selectKey keyProperty="brdid" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<select id="findEducationContent" parameterType="SchoolVO" resultType="SchoolVO">
		SELECT
			b.brdid,
			b.swid,
			d.name as typename,
			d.ptypeid,
			b.title,
			DATE_FORMAT(b.regdate, '%Y-%m-%d %H:%i:%s') as regdate,
			b.content,
			a.nickname as writer,
			b.userno,
			b.count,
			(SELECT COUNT(*) FROM brd_schoolwork_likes c WHERE b.brdid = c.brdid AND c.likes = 1) as likes
		FROM brd_schoolwork b
		LEFT JOIN info_userinfo a on b.userno = a.userno
		LEFT JOIN cod_schoolwork d on b.swid = d.swid
		WHERE b.brdid = #{brdid}
	</select>
	<update id="modEducationCount" parameterType="SchoolVO">
		UPDATE brd_schoolwork SET
			count = count + 1
		WHERE brdid = #{brdid}
	</update>
	<select id="findEducationTotalCnt" parameterType="SchoolVO" resultType="int">
		SELECT 
			COUNT(*)
		FROM brd_schoolwork a
		LEFT JOIN cod_schoolwork b ON a.swid = b.swid
		LEFT JOIN info_userinfo c ON a.userno = c.userno
		WHERE b.ptypeid= #{ptypeid}
		<if test="keyword != null and keyword != ''">
			<if test="srchType == 1">
				AND a.title LIKE CONCAT('%',#{keyword},'%')
			</if>
			<if test="srchType == 2">
				AND c.nickname LIKE CONCAT('%',#{keyword},'%')
			</if>
		</if>
		<if test="swid != null and swid != 0">
			<if test="srchType == 3">
				AND a.swid = #{swid}
			</if>
		</if>
	</select>
	<insert id="addEducationReply" parameterType="SchoolVO" useGeneratedKeys="true" keyProperty="repid" keyColumn="repid">
		INSERT INTO brd_schoolwork_reply(
			brdid,
			content,
			regdate,
			moddate,
			userno
		) VALUES(
			#{brdid},
			#{repContent},
			NOW(),
			NOW(),
			#{userno}
		)
		<selectKey keyProperty="repid" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>	
	<select id="findEducationReply" parameterType="SchoolVO"  resultType="SchoolVO">
		SELECT 
			a.repid,
			b.nickname as replier,
			a.content as repContent,
			DATE_FORMAT(a.regdate, '%Y-%m-%d %H:%i:%s') as repRegdate,
			(SELECT c.likes FROM brd_schoolwork_reply_likes c WHERE a.repid = c.repid AND c.likes = 1) as repLikes,
			(SELECT c.dislikes FROM brd_schoolwork_reply_likes c WHERE a.repid = c.repid AND c.dislikes = 1) as repDislikes
		FROM brd_schoolwork_reply a
		LEFT JOIN info_userinfo b on a.userno = b.userno
		WHERE a.brdid = #{brdid}
	</select>
	<update id="modEducationData" parameterType="SchoolVO">
		UPDATE brd_schoolwork SET
			content = #{content},
			title = #{title},
			moddate = NOW(),
			swid=#{swid}
		WHERE brdid=#{brdid}
	</update>
	<select id="checkLikes" parameterType="SchoolVO" resultType="SchoolVO">
		SELECT
			id as lid,
			likes
		FROM brd_schoolwork_likes
		WHERE userno = #{userno}
			AND brdid = #{brdid}
	</select>
	<insert id="addEducationLikes" parameterType="SchoolVO">
		INSERT INTO brd_schoolwork_likes(
			brdid,
			userno,
			likes
		)VALUES(
			#{brdid},
			#{userno},
			#{likes}
		)
	</insert>
	<update id="modEducationLikes" parameterType="SchoolVO">
		UPDATE brd_schoolwork SET
			likes = likes+1
		WHERE brdid=#{brdid}
			AND userno = #{userno}
	</update>
	<!-- 
	<update id="modEducationDislikes" parameterType="SchoolVO">
		UPDATE brd_schoolwork SET
			dislikes = dislikes+1
		WHERE brdid=#{brdid}
	</update> -->
	<select id="checkRepLikes" parameterType="SchoolVO" resultType="SchoolVO">
		SELECT
			id as replid,
			likes as repLikes,
			dislikes as repDislikes
		FROM brd_schoolwork_reply_likes
		WHERE userno = #{userno}
			AND repid = #{repid}
	</select>
	<insert id="addEducationRepLikes" parameterType="SchoolVO">
		INSERT INTO brd_schoolwork_reply_likes(
			repid,
			userno,
			likes,
			dislikes
		)VALUES(
			#{repid},
			#{userno},
			#{repLikes},
			#{repDislikes}
		)
	</insert>
	<update id="modRepLikes" parameterType="SchoolVO">
		UPDATE brd_schoolwork_reply_likes SET
			likes = likes + 1
		WHERE repid = #{repid}
			AND userno = #{userno}
	</update>
	<update id="modRepDisLikes" parameterType="SchoolVO">
		UPDATE brd_schoolwork_reply_likes SET
			dislikes = dislikes+1
		WHERE repid = #{repid}
			AND userno = #{userno}
	</update>

	<select id="getSwtypes" parameterType="SchoolVO" resultType="SchoolVO">
		SELECT
			swid,
			name as typename
		FROM cod_schoolwork
		WHERE ptypeid = #{ptypeid}
	</select>
	<delete id="deleteEducation" parameterType="SchoolVO">
		DELETE FROM
			brd_schoolwork
		WHERE brdid=#{brdid}
	</delete>
	<delete id="deleteEducationReply" parameterType="SchoolVO">
		DELETE FROM
			brd_schoolwork_reply
		WHERE brdid = #{brdid}
		<if test="repid != null and repid != ''">
			AND repid = #{repid}
		</if>
	</delete>
		<delete id="deleteEducationLikes" parameterType="SchoolVO">
		DELETE FROM brd_schoolwork_likes
			WHERE brdid = #{brdid}
	</delete>
	<delete id="deleteEducationReplyLikes" parameterType="SchoolVO">
		DELETE FROM brd_schoolwork_reply_likes
			WHERE repid in (SELECT a.repid FROM brd_schoolwork_reply a WHERE brdid = #{brdid})
	</delete>
	<update id="undoEducationBoardLikes" parameterType="SchoolVO">
		UPDATE brd_schoolwork_likes SET
			likes = likes - 1
		WHERE brdid = #{brdid}
			AND userno = #{userno}
	</update>
	<update id="undoEducationBoardRepLikes" parameterType="SchoolVO">
		UPDATE brd_schoolwork_reply_likes SET
			likes = likes - 1
		WHERE repid = #{repid}
			AND userno = #{userno}
	</update>
	<update id="undoEducationBoardRepDislikes" parameterType="SchoolVO">
		UPDATE brd_schoolwork_reply_likes SET
			dislikes = dislikes - 1
		WHERE repid = #{repid}
			AND userno = #{userno}
	</update>
</mapper>